// <auto-generated />
using Airbnb_client.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Airbnb_client.Migrations
{
    [DbContext(typeof(ApplicatonDbContext))]
    partial class ApplicatonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Airbnb_client.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstateId")
                        .HasColumnType("integer");

                    b.Property<int>("House")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EstateId")
                        .IsUnique();

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Airbnb_client.Models.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Area")
                        .HasColumnType("real");

                    b.Property<int>("EstateId")
                        .HasColumnType("integer");

                    b.Property<bool>("Internet")
                        .HasColumnType("boolean");

                    b.Property<int>("Kitchen")
                        .HasColumnType("integer");

                    b.Property<string>("LocationCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NearestBusStop")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NearestMetroStation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Parking")
                        .HasColumnType("boolean");

                    b.Property<int>("Rooms")
                        .HasColumnType("integer");

                    b.Property<bool>("allowPets")
                        .HasColumnType("boolean");

                    b.Property<bool>("insulation")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EstateId")
                        .IsUnique();

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("Airbnb_client.Models.Estate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FavoritesId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Estates");
                });

            modelBuilder.Entity("Airbnb_client.Models.FavoriteEstate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EstateId")
                        .HasColumnType("integer");

                    b.Property<int>("FavoritesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EstateId");

                    b.HasIndex("FavoritesId");

                    b.ToTable("FavoriteEstates");
                });

            modelBuilder.Entity("Airbnb_client.Models.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Airbnb_client.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FavoritesId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FavoritesId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Airbnb_client.Models.Adress", b =>
                {
                    b.HasOne("Airbnb_client.Models.Estate", "Estate")
                        .WithOne("Adress")
                        .HasForeignKey("Airbnb_client.Models.Adress", "EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");
                });

            modelBuilder.Entity("Airbnb_client.Models.Description", b =>
                {
                    b.HasOne("Airbnb_client.Models.Estate", "Estate")
                        .WithOne("Description")
                        .HasForeignKey("Airbnb_client.Models.Description", "EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");
                });

            modelBuilder.Entity("Airbnb_client.Models.Estate", b =>
                {
                    b.HasOne("Airbnb_client.Models.User", "User")
                        .WithMany("Estates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Airbnb_client.Models.FavoriteEstate", b =>
                {
                    b.HasOne("Airbnb_client.Models.Estate", "Estate")
                        .WithMany("FavoritesLists")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Airbnb_client.Models.Favorites", "Favorites")
                        .WithMany("FavoriteEstateList")
                        .HasForeignKey("FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");

                    b.Navigation("Favorites");
                });

            modelBuilder.Entity("Airbnb_client.Models.User", b =>
                {
                    b.HasOne("Airbnb_client.Models.Favorites", "FavoriteList")
                        .WithOne("User")
                        .HasForeignKey("Airbnb_client.Models.User", "FavoritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteList");
                });

            modelBuilder.Entity("Airbnb_client.Models.Estate", b =>
                {
                    b.Navigation("Adress")
                        .IsRequired();

                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("FavoritesLists");
                });

            modelBuilder.Entity("Airbnb_client.Models.Favorites", b =>
                {
                    b.Navigation("FavoriteEstateList");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("Airbnb_client.Models.User", b =>
                {
                    b.Navigation("Estates");
                });
#pragma warning restore 612, 618
        }
    }
}
